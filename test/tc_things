#! ruby
require 'test/unit'
require 'such/things'

module Gtk
  class Widget
  end
  class A < Widget
  end
  class B < Widget
  end
  class C < Widget
  end
end

module Such
  module Thing # dummy module
  end

  SUBKLASS = []
  KLASS = []
  KW = []
  def self.subclass(subklass, klass, **kw)
    SUBKLASS.push subklass
    KLASS.push klass
    KW.push kw
  end
end

class TestThings < Test::Unit::TestCase
  def test_list
    assert_equal(Such::Things.list(Gtk::Widget).sort{|a,b| a.name<=>b.name}, [Gtk::A,Gtk::B,Gtk::C])
  end

  def test_widgets
    Such::Things.in(Gtk::Widget)
    assert_equal([:C, :B, :A], Such::SUBKLASS)
    assert_equal([Gtk::C, Gtk::B, Gtk::A], Such::KLASS)
    kw = {include: Such::Thing}
    assert_equal([kw,kw,kw], Such::KW)
  end
end
